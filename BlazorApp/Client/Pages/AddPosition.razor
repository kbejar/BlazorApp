@page "/position/add"
@page "/position/edit/{positionId:int}"
@using BlazorApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Add Position</h3>

<EditForm Model="@position" OnValidSubmit="SavePosition">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Position</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="position.PositionName" />
        </div>
        <ValidationMessage For="@(() => position.PositionName)" />
    </div>
    <div class="mb-3">
        <label for="Name" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="position.Description" />
        </div>
        <ValidationMessage For="@(() => position.Description)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int positionId { get; set; }

    protected string Title = "Add";
    protected Position position = new();

    protected override async Task OnParametersSetAsync()
    {
        if (positionId != 0)
        {
            Title = "Edit";
            position = await Http.GetFromJsonAsync<Position>("api/Position/" + positionId);
        }

    }

    protected async Task SavePosition()
    {
        if (position.PositionId != 0)
        {
            await Http.PutAsJsonAsync("api/Position", position);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Position", position);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchpositiondetails");
    }
}
